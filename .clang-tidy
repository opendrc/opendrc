
Checks: >
  -*,
  readability-identifier-naming


CheckOptions:
  - { key: readability-identifier-naming.ClassCase,                value: lower_case  }
  - { key: readability-identifier-naming.EnumCase,                 value: lower_case  }
  - { key: readability-identifier-naming.UnionCase,                value: lower_case  }

  - { key: readability-identifier-naming.TemplateParameterCase,    value: CamelCase }

  - { key: readability-identifier-naming.TypedefCase,              value: lower_case  }
  - { key: readability-identifier-naming.TypeAliasCase,            value: lower_case  }

  - { key: readability-identifier-naming.FunctionCase,             value: lower_case  }
  - { key: readability-identifier-naming.FunctionIgnoredRegexp,    value: '_[a-zA-Z_]*'  }

  - { key: readability-identifier-naming.ClassMethodCase,          value: lower_case  }
  - { key: readability-identifier-naming.VariableCase,             value: lower_case }
  - { key: readability-identifier-naming.ClassMemberCase,          value: lower_case }
  # - { key: readability-identifier-naming.ClassMemberSuffix,        value: '_'          }
  - { key: readability-identifier-naming.MemberCase,               value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix,      value: '_'        }
  - { key: readability-identifier-naming.PrivateMemberCase,        value: lower_case }
  - { key: readability-identifier-naming.ProtectedMemberCase,      value: lower_case }
  - { key: readability-identifier-naming.NamespaceCase,            value: lower_case }
  - { key: readability-identifier-naming.ConstantCase,             value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,            value: lower_case }
  - { key: readability-identifier-naming.MacroDefinitionCase,      value: UPPER_CASE }